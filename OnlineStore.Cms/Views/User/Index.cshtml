@model IEnumerable<OnlineStore.Cms.ViewModel.UsersVM>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout_Admin.cshtml";
}
<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                Role
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsDeleted)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @{
                        var roles = Enum.GetValues(typeof(OnlineStore.Cms.ViewModel.UserRole))
                        .Cast<OnlineStore.Cms.ViewModel.UserRole>()
                        .Where(r => r != OnlineStore.Cms.ViewModel.UserRole.Admin)
                        .Select(r => new SelectListItem
                {
                    Value = ((int)r).ToString(),
                    Text = r.ToString(),
                    Selected = item.Role == r
                });
                        @Html.DropDownListFor(modelItem => item.Role, roles, "Select Role", new { @class = "form-control" })
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsDeleted)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                </td>
            </tr>
        }
    </tbody>
</table>
